<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html">
    <h:head>
        <title>WebSocket Async Sample</title>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
        <title>WebSocket Async Sample</title>
        <style type="text/css">
            td {
                color: white;
                font-size:30px;
            }
            td.tblmsg{
                color: #d9d9d9;
                font-size:24px;
            }
            td.tblmsg2{
                color: #d9d9d9;
                font-size:16px;
            }

            table.tblbord{
                border-collapse: collapse;
                border:1px solid #333;
                border-color: white;
            }
            div.msg{
                color: white;
                font-size:30px;
            }
            button.button1{
                border-radius: 5px;
                -moz-border-radius: 5px;
                -webkit-border-radius: 5px;
                -o-border-radius: 5px;
                -ms-border-radius: 5px;
                border:#a9a9a9 1px solid;
                -moz-box-shadow: inset 0 0 5px rgba(0,0,0,0.2),0 0 2px rgba(0,0,0,0.3);
                -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2),0 0 2px rgba(0,0,0,0.3);
                box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2),0 0 2px rgba(0,0,0,0.3);
                width:120px;
                height:35px;
                padding:0 3px;
                cursor:pointer;
                color: white;
                font-weight:900;
                background:#ff6600;
                font-size: 14px;

            }
            button.button2{
                border-radius: 5px;
                -moz-border-radius: 5px;
                -webkit-border-radius: 5px;
                -o-border-radius: 5px;
                -ms-border-radius: 5px;
                border:#a9a9a9 1px solid;
                -moz-box-shadow: inset 0 0 5px rgba(0,0,0,0.2),0 0 2px rgba(0,0,0,0.3);
                -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2),0 0 2px rgba(0,0,0,0.3);
                box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2),0 0 2px rgba(0,0,0,0.3);
                width:130px;
                height:35px;
                padding:0 3px;
                cursor:pointer;
                color: white;
                font-weight:900;
                background:#669900;
                font-size: 14px;

            }
            button.button3{
                border-radius: 5px;
                -moz-border-radius: 5px;
                -webkit-border-radius: 5px;
                -o-border-radius: 5px;
                -ms-border-radius: 5px;
                border:#a9a9a9 1px solid;
                -moz-box-shadow: inset 0 0 5px rgba(0,0,0,0.2),0 0 2px rgba(0,0,0,0.3);
                -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2),0 0 2px rgba(0,0,0,0.3);
                box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2),0 0 2px rgba(0,0,0,0.3);
                width:130px;
                height:35px;
                padding:0 3px;
                cursor:pointer;
                color: black;
                font-weight:900;
                background:#b9cddb;
                font-size: 14px;

            }
            button.button1:hover {
                background:#ffb500;
                color: black;
            }
            button.button2:hover {
                background:#97a826;
            }
            button.button3:hover {
                background:#96b4c9;
            }
        </style>
        <h:outputScript library="js" name="jquery.js"/>
        <h:outputScript library="js" name="createJSONMessage.js"/>
        <h:outputScript library="js" name="table-manage.js"/>

        <script language="javascript" type="text/javascript">
            var wsUri = "ws://localhost:8080/LEGOMind-WebSocket-Server/lego-server/browser";
            var websocket = null;


            function init() {
                document.getElementById("disconnect").style.display = "none";
            }


            function connectServerEndpoint() {
                if ("WebSocket" in window) {
                    websocket = new WebSocket(wsUri);
                } else if ("MozWebSocket" in window) {
                    websocket = new MozWebSocket(wsUri);
                } else {
                    websocket = new WebSocket(wsUri);
                }

                websocket.onopen = function(evt) {
                    onOpen(evt);
                };
                websocket.onmessage = function(evt) {
                    onMessage(evt);
                };
                websocket.onerror = function(evt) {
                    onError(evt);
                };
                document.getElementById("connect").style.display = "none";
                document.getElementById("disconnect").style.display = "block";
            }

            function disConnectServerEndpoint() {
                websocket.close(4001, "Close connection from client");
                document.getElementById("connect").style.display = "block";
                document.getElementById("disconnect").style.display = "none";
            }


            function onOpen(evt) {
                ;
            }

            function onMessage(evt) {
                writeToScreen(evt.data);
            }

            function onError(evt) {
                writeToScreen("ERROR: " + evt.data);
            }

            function sendMessage(orderNUM, msg) {
                //orderNUM : LEGO_FORWARD,LEGO_BACKWARD,LEGO_LEFTTURN,LEGO_RIGHTTURN,LEGO_STOP,LEGO_SPPEDUP,LEGO_SPEEDDOWN,

                var message = createJSONMessage(orderNUM, msg);
                if (websocket) {
                    websocket.send(message);
                }
            }

            function writeToScreen(messages) {
                updateScreen(messages);
            }

            window.addEventListener("load", init, false);
        </script>
    </h:head>

    <h:body style="background-color: #5382a1">
        <TABLE BORDER="0" ALIGN="CENTER" CLASS="ALL" WIDTH="480">
            <TR><TD><h:graphicImage library="image" name="java.jpg" /></TD></TR>
            <TR><TD><div class="msg">LEGO Mindstorms の制御</div></TD></TR>
            <TR>
                <TD>
                    <TABLE BORDER="0" WIDTH="480">
                        <TR><TD class="tblmsg">正面にある障害物まで</TD><TD align="right" valign="center" class="tblmsg" id="show-message">cm</TD></TR>  
                        <TR><TD class="tblmsg2">LEGOからのメッセージ</TD><TD class="tblmsg2" align="left" valign="center" id="show-warn-message"></TD></TR>
                    </TABLE>
                </TD>
            </TR>

            <TR><TD>
                    <table border ="1" align="left" width="480" class="tblbord">
                        <TR><TD>
                                <TABLE border="0" CLASS="se7" WIDTH="480" align="center">
                                    <TR>
                                        <TD align="center" valign="middle" width="20"></TD>
                                        <TD align="center" valign="middle" width="20">
                                            <button class="button1" id="forward" onClick="sendMessage('LEGO_FORWARD', 'FORWARD');">前進</button>
                                        </TD>
                                        <TD align="center" valign="middle" width="20"></TD>
                                    </TR>
                                    <TR>
                                        <TD align="center" valign="middle" width="20">
                                            <button class="button1" id="left" value="" onClick="sendMessage('LEGO_LEFTTURN', 'LEFTTURN');">左</button>    
                                        </TD>
                                        <TD align="center" valign="middle" width="20"></TD>
                                        <TD align="center" valign="middle" width="20">
                                            <button class="button1" id="right" type="button"  onClick="sendMessage('LEGO_RIGHTTURN', 'RIGHTTURN');">右</button>
                                        </TD>
                                    </TR>
                                    <TR>
                                        <TD align="center" valign="middle" width="20"></TD>
                                        <TD align="center" valign="middle" width="20">
                                            <button class="button1" id="backward" type="button"  onClick="sendMessage('LEGO_BACKWARD', 'BACKWARD');">後進</button>
                                        </TD>
                                        <TD align="center" valign="middle" width="20"></TD>
                                    </TR>
                                    <TR>
                                        <TD align="center" valign="middle" width="20">
                                            <button class="button2" id="stop" onClick="sendMessage('LEGO_STOP', 'STOP');">ストップ</button>
                                        </TD>
                                        <TD align="center" valign="middle" width="20">
                                            <button class="button2" id="speedup" onClick="sendMessage('LEGO_SPPEDUP', 'SPPEDUP');">スピード・アップ</button>
                                        </TD>
                                        <TD align="center" valign="middle" width="20">
                                            <button class="button2" id="speeddown" onClick="sendMessage('LEGO_SPEEDDOWN', 'SPEEDDOWN');">スピード・ダウン</button>
                                        </TD>
                                    </TR>
                                    <TR>
                                        <TD colspan="3" >
                                            <button class="button3" id="connect"  onClick="connectServerEndpoint();">接続</button><button class="button3" id="disconnect"  onClick="disConnectServerEndpoint();">切断</button>                                        
                                        </TD>

                                    </TR>
                                </TABLE>
                            </TD></TR>
                    </table>
                </TD>
            </TR>
        </TABLE>

    </h:body>
</html>

