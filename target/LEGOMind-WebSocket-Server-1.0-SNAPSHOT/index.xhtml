<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html">
    <h:head>
        <title>WebSocket Async Sample</title>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
        <title>WebSocket Async Sample</title>
        <link rel="stylesheet" href="css/layout.css" type="text/css"></link>
        <link rel="stylesheet" href="css/general.css" type="text/css"></link>
        <style type="text/css">
            table.msgTbl{
                background:#5f5f5f;
                font-size: 50px;
                width:300px;
                height:60px;
                color: white;
            }
            button.button1{
                border-radius: 5px;
                -moz-border-radius: 5px;
                -webkit-border-radius: 5px;
                -o-border-radius: 5px;
                -ms-border-radius: 5px;
                border:#a9a9a9 1px solid;
                -moz-box-shadow: inset 0 0 5px rgba(0,0,0,0.2),0 0 2px rgba(0,0,0,0.3);
                -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2),0 0 2px rgba(0,0,0,0.3);
                box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2),0 0 2px rgba(0,0,0,0.3);
                width:300px;
                height:45px;
                padding:0 3px;
                cursor:pointer;
                color: white;
                font-weight:900;
                background:#ff0000;
                font-size: 18px;
            }
            button.button2{
                border-radius: 5px;
                -moz-border-radius: 5px;
                -webkit-border-radius: 5px;
                -o-border-radius: 5px;
                -ms-border-radius: 5px;
                border:#a9a9a9 1px solid;
                -moz-box-shadow: inset 0 0 5px rgba(0,0,0,0.2),0 0 2px rgba(0,0,0,0.3);
                -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2),0 0 2px rgba(0,0,0,0.3);
                box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2),0 0 2px rgba(0,0,0,0.3);
                width:300px;
                height:45px;
                padding:0 3px;
                cursor:pointer;
                color: white;
                font-weight:900;
                background:#8da6b1;
                font-size: 18px;

            }
            button.button3{
                border-radius: 5px;
                -moz-border-radius: 5px;
                -webkit-border-radius: 5px;
                -o-border-radius: 5px;
                -ms-border-radius: 5px;
                border:#a9a9a9 1px solid;
                -moz-box-shadow: inset 0 0 5px rgba(0,0,0,0.2),0 0 2px rgba(0,0,0,0.3);
                -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2),0 0 2px rgba(0,0,0,0.3);
                box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2),0 0 2px rgba(0,0,0,0.3);
                width:300px;
                height:45px;
                padding:0 3px;
                cursor:pointer;
                color: #5f5f5f;
                font-weight:900;
                background:#b0c3c8;
                font-size: 18px;

            }
            button.button1:hover {
                background:#FFD5EC;
                color: black;
            }
            button.button2:hover {
                background:#D3D3D3;
                color: black;
            }
            button.button3:hover {
                background:#696969;
                color: white;
            }
        </style>

        <h:outputScript library="js" name="jquery.js"/>
        <h:outputScript library="js" name="createJSONMessage.js"/>
        <h:outputScript library="js" name="table-manage.js"/>

        <script language="javascript" type="text/javascript">
            var wsUri = "ws://192.168.1.101:8080/LEGOMind-WebSocket-Server/lego-server/browser";
            var websocket = null;

            function init() {
                document.getElementById("disconnect").style.display = "none";
                hide();
            }

            function connectServerEndpoint() {
                if ("WebSocket" in window) {
                    websocket = new WebSocket(wsUri);
                } else if ("MozWebSocket" in window) {
                    websocket = new MozWebSocket(wsUri);
                } else {
                    websocket = new WebSocket(wsUri);
                }

                websocket.onopen = function(evt) {
                    onOpen(evt);
                };
                websocket.onmessage = function(evt) {
                    onMessage(evt);
                };
                websocket.onerror = function(evt) {
                    onError(evt);
                };
                document.getElementById("connect").style.display = "none";
                document.getElementById("disconnect").style.display = "block";
            }

            function disConnectServerEndpoint() {
                websocket.close(4001, "Close connection from client");
                document.getElementById("connect").style.display = "block";
                document.getElementById("disconnect").style.display = "none";
            }


            function onOpen(evt) {
                ;
            }

            function onMessage(evt) {
                writeToScreen(evt.data);
            }

            function onError(evt) {
                writeToScreen("ERROR: " + evt.data);
            }

            function sendMessage(orderNUM, msg) {
                //orderNUM : LEGO_FORWARD,LEGO_BACKWARD,LEGO_LEFTTURN,LEGO_RIGHTTURN,LEGO_STOP,LEGO_SPPEDUP,LEGO_SPEEDDOWN,

                var message = createJSONMessage(orderNUM, msg);
                if (websocket) {
                    websocket.send(message);
                }
            }

            function writeToScreen(messages) {
                updateScreen(messages);
            }

            window.addEventListener("load", init, false);
        </script>
    </h:head>
    <h:body style="background-color: white">
        <h:graphicImage style="width:300px; margin:0 auto 0 auto;" library="image" name="fm-forum.png" />
        <table class="msgTbl">
            <TR>
                <TD>
                    <DIV align="right" valign="center" class="tblmsg" id="show-message">cm</DIV>            
                </TD>
            </TR>
        </table>
        <button class="button1" id="forward" onClick="sendMessage('LEGO_FORWARD', 'FORWARD');">前進</button><br/>
        <button class="button1" id="left" value="" onClick="sendMessage('LEGO_LEFTTURN', 'LEFTTURN');">左</button><br/>
        <button class="button1" id="right" type="button"  onClick="sendMessage('LEGO_RIGHTTURN', 'RIGHTTURN');">右</button><br/>
        <button class="button1" id="backward" type="button"  onClick="sendMessage('LEGO_BACKWARD', 'BACKWARD');">後進</button><br/>
        <button class="button2" id="stop" onClick="sendMessage('LEGO_STOP', 'STOP');">ストップ</button><br/>
        <button class="button2" id="speedup" onClick="sendMessage('LEGO_SPPEDUP', 'SPPEDUP');">スピード・アップ</button><br/>
        <button class="button2" id="speeddown" onClick="sendMessage('LEGO_SPEEDDOWN', 'SPEEDDOWN');">スピード・ダウン</button><br/>
        <button class="button3" id="connect"  onClick="connectServerEndpoint();">接続</button><button class="button3" id="disconnect"  onClick="disConnectServerEndpoint();">切断</button><br/>

    </h:body>
</html>

